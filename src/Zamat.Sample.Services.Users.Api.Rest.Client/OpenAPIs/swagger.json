{
  "openapi": "3.0.1",
  "info": {
    "title": "UserService Api",
    "description": "UserService Api",
    "contact": {
      "name": "contact@contoso.com",
      "url": "contoso.com",
      "email": "contact@contoso.com"
    },
    "license": {
      "name": "Use under LICX."
    },
    "version": "1.0"
  },
  "paths": {
    "/v1/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create user",
        "description": "Create user",
        "operationId": "CreateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user was created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              }
            }
          },
          "204": {
            "description": "The user was not created"
          },
          "400": {
            "description": "Api problem occured"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get users paginable list",
        "description": "Get users paginable list",
        "operationId": "GetUsersPaginableList",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The page index.",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The page limit index.",
              "format": "int32",
              "default": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The users paginator",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user",
        "description": "Get user",
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user entity",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          },
          "204": {
            "description": "The user entity not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "description": "Delete user",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The user entity was deleted."
          },
          "400": {
            "description": "Api problem occured"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "description": "Update user",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The user entity was updated."
          },
          "400": {
            "description": "Api problem occured"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateUserRequest": {
        "required": [
          "firstName",
          "lastName",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "minLength": 6,
            "type": "string",
            "description": "The user name."
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The user first name."
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The user last name."
          }
        },
        "additionalProperties": false
      },
      "CreateUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The user identifier.",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "The user name.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "The user first name."
          },
          "lastName": {
            "type": "string",
            "description": "The user last name."
          }
        },
        "additionalProperties": false
      },
      "GetUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The user identifier.",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "The user name.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "The user first name."
          },
          "lastName": {
            "type": "string",
            "description": "The user last name."
          }
        },
        "additionalProperties": false
      },
      "GetUsersResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "description": "The user paginator current page.",
            "format": "int32"
          },
          "itemsPerPage": {
            "type": "integer",
            "description": "The user paginator items per page.",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "description": "The user paginator total items.",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "description": "The user paginator total pages.",
            "format": "int32",
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUserResponse"
            },
            "description": "The user paginator items.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRequest": {
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The user first name."
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "The user last name."
          }
        },
        "additionalProperties": false
      }
    }
  }
}